<?xml version="1.0" encoding="UTF-8"?>
<!-- (c) Copyright by SBB AG, 2019 - Alle Rechte vorbehalten -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>ch.sbb.scion</groupId>
	<artifactId>scion-parent</artifactId>
	<version>0.0.9-SNAPSHOT</version>
	<packaging>pom</packaging>

	<licenses>
		<license>
			<name>Eclipse Public License - v 2.0</name>
			<url>https://www.eclipse.org/org/documents/epl-2.0/EPL-2.0.txt</url>
		</license>
	</licenses>

	<developers>
		<developer>
			<name>Marc Hoffmann</name>
			<email>marc.hoffmann@sbb.ch</email>
			<organization>Swiss Federal Railways (SBB)</organization>
			<organizationUrl>https://www.sbb.ch</organizationUrl>
		</developer>
		<developer>
			<name>Gilles Iachelini</name>
			<email>gilles.iachelini@sbb.ch</email>
			<organization>Swiss Federal Railways (SBB)</organization>
			<organizationUrl>https://www.sbb.ch</organizationUrl>
		</developer>
		<developer>
			<name>István Lőrincz</name>
			<email>istvan.lorincz@sbb.ch</email>
			<organization>Swiss Federal Railways (SBB)</organization>
			<organizationUrl>https://www.sbb.ch</organizationUrl>
		</developer>
		<developer>
			<name>Adrian Ruckli</name>
			<email>adrian.ruckli@sbb.ch</email>
			<organization>Swiss Federal Railways (SBB)</organization>
			<organizationUrl>https://www.sbb.ch</organizationUrl>
		</developer>
		<developer>
			<name>Daniel Wiehl</name>
			<email>daniel.wiehl@sbb.ch</email>
			<organization>Swiss Federal Railways (SBB)</organization>
			<organizationUrl>https://www.sbb.ch</organizationUrl>
		</developer>
	</developers>

	<scm>
		<!--connection>scm:git:ssh://github.com/SchweizerischeBundesbahnen/scion-rcp.git</connection> -->
		<developerConnection>scm:git:https://github.com/SchweizerischeBundesbahnen/scion-rcp.git</developerConnection>
		<url>https://github.com/SchweizerischeBundesbahnen/scion-rcp/tree/master</url>
		<tag>HEAD</tag>
	</scm>

	<properties>
		<maven.compiler.release>17</maven.compiler.release>

		<tycho.version>3.0.4</tycho.version>
		<jacoco.version>0.8.10</jacoco.version>
		<gpg-plugin.version>3.0.1</gpg-plugin.version>
		<flatten-maven-plugin.version>1.4.1</flatten-maven-plugin.version>
		<scm-plugin.version>2.0.0</scm-plugin.version>
		<release-plugin.version>3.0.0</release-plugin.version>
		<deploy-plugin.version>3.1.1</deploy-plugin.version>
		<javadoc-plugin.version>2.9.1</javadoc-plugin.version>

		<eclipse.release>2023-09</eclipse.release>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
	</properties>

	<repositories>
		<repository>
			<id>eclipse-platform</id>
			<url>https://download.eclipse.org/releases/${eclipse.release}/</url>
			<layout>p2</layout>
		</repository>
	</repositories>

	<modules>
		<!-- Target Platform & features -->
		<module>ch.sbb.scion.rcp.microfrontend.targetplatform</module>
		<module>ch.sbb.scion.rcp.feature</module>
		<module>ch.sbb.scion.rcp.feature.test</module>
		<module>ch.sbb.scion.rcp.swtbot.feature</module>

		<!-- Demo applications & products -->
		<module>ch.sbb.scion.rcp.microfrontend.app.demo</module>
		<module>ch.sbb.scion.rcp.microfrontend.app.demo.product</module>
		<module>ch.sbb.scion.rcp.microfrontend.e3.app.demo</module>
		<module>ch.sbb.scion.rcp.microfrontend.e3.app.demo.product</module>

		<!-- modules & test fragements -->
		<!-- Please note: whenever you add a CodeCoverage-relevant module here, -->
		<!-- add the same module as dependency in ch.sbb.scion.rcp.coveragereport/pom.xml -->
		<module>ch.sbb.scion.rcp.microfrontend</module>
		<module>ch.sbb.scion.rcp.microfrontend.test</module>
		<module>ch.sbb.scion.rcp.workbench</module>
		<module>ch.sbb.scion.rcp.microfrontend.e3.app.demo.test</module>
		<!-- does not work at the moment: <module>ch.sbb.scion.rcp.workbench.test</module> -->

		<!-- code quality -->
		<module>ch.sbb.scion.rcp.coveragereport</module>
	</modules>


	<build>

		<plugins>
			<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>tycho-p2-director-plugin</artifactId>
				<version>${tycho.version}</version>
			</plugin>

			<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>tycho-packaging-plugin</artifactId>
				<version>${tycho.version}</version>
				<configuration>
					<strictVersions>false</strictVersions>
					<replacePackagingType>true</replacePackagingType>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>build-qualifier</goal>
						</goals>
						<phase>prepare-package</phase>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>tycho-surefire-plugin</artifactId>
				<version>${tycho.version}</version>
				<configuration>
					<useUIHarness>false</useUIHarness>
					<useUIThread>false</useUIThread>
					<trimStackTrace>false</trimStackTrace>
					<!-- even though thiese are the default patterns, they had to be given 
						explicitly -->
					<includes>
						<include>**/*Test.*</include>
						<include>**/*IT.*</include>
					</includes>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.version}</version>
				<executions>
					<execution>
						<id>prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>tycho-maven-plugin</artifactId>
				<version>${tycho.version}</version>
				<extensions>true</extensions>
			</plugin>

			<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>tycho-compiler-plugin</artifactId>
				<version>${tycho.version}</version>
			</plugin>


			<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>tycho-source-plugin</artifactId>
				<version>${tycho.version}</version>
				<executions>
					<execution>
						<id>plugin-source</id>
						<goals>
							<goal>plugin-source</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<archive>
						<manifestEntries>
							<Bundle-ManifestVersion>2</Bundle-ManifestVersion>
							<Bundle-SymbolicName>${project.artifactId}.source</Bundle-SymbolicName>
							<Bundle-Version>${osgi.Bundle-Version}</Bundle-Version>
							<Bundle-Name>Source for ${project.groupId}.${project.artifactId}</Bundle-Name>
							<Eclipse-SourceBundle>${project.artifactId};version="${osgi.Bundle-Version}";roots:="."</Eclipse-SourceBundle>
						</manifestEntries>
					</archive>
					<includePom>true</includePom>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>tycho-versions-plugin</artifactId>
				<version>${tycho.version}</version>
			</plugin>

			<plugin>
				<groupId>org.eclipse.tycho</groupId>
				<artifactId>target-platform-configuration</artifactId>
				<version>${tycho.version}</version>
				<configuration>
					<target>
						<artifact>
							<groupId>ch.sbb.scion</groupId>
							<artifactId>ch.sbb.scion.rcp.microfrontend.targetplatform</artifactId>
							<version>${project.version}</version>
						</artifact>
					</target>
					<environments>
						<environment>
							<os>win32</os>
							<ws>win32</ws>
							<arch>x86_64</arch>
						</environment>
						<environment>
							<os>macosx</os>
							<ws>cocoa</ws>
							<arch>x86_64</arch>
						</environment>
						<environment>
							<os>linux</os>
							<ws>gtk</ws>
							<arch>x86_64</arch>
						</environment>
					</environments>
				</configuration>
			</plugin>

			<plugin>
				<!-- The flatten-maven-plugin must be in the build section so it doesn't 
					have to be repeated in all child projects. However, the build of this parent 
					POM must not execute flatten-flatten and flatten-clean. This is accomplished 
					by binding them to the phase 'none' and setting the 'inherited' flag for 
					the plugin's configuration to 'false'. Child projects will inherit the build 
					step but with the configuration from the pluginManagement section. -->
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>flatten-maven-plugin</artifactId>
				<inherited>false</inherited>
				<executions>
					<execution>
						<id>flatten-flatten</id>
						<phase>none</phase>
					</execution>
					<execution>
						<id>flatten-clean</id>
						<phase>none</phase>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>${deploy-plugin.version}</version>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>${release-plugin.version}</version>
				<configuration>
					<autoVersionSubmodules>true</autoVersionSubmodules>
					<useReleaseProfile>false</useReleaseProfile>
					<releaseProfiles>release</releaseProfiles>
					<pushChanges>false</pushChanges>
					<preparationGoals>tycho-versions:update-eclipse-metadata scm:add</preparationGoals>
					<completionGoals>tycho-versions:update-eclipse-metadata scm:add</completionGoals>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-scm-plugin</artifactId>
				<version>${scm-plugin.version}</version>
				<configuration>
					<includes>**/MANIFEST.MF,**/*.product,**/feature.xml</includes>
					<excludes>**/target/**</excludes>
				</configuration>
			</plugin>

		</plugins>

		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>${javadoc-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>flatten-maven-plugin</artifactId>
					<version>${flatten-maven-plugin.version}</version>
					<executions>
						<!-- Create flattened POM: -->
						<execution>
							<id>flatten-flatten</id>
							<phase>process-resources</phase>
							<goals>
								<goal>flatten</goal>
							</goals>
						</execution>
						<!-- Remove generated files -->
						<execution>
							<id>flatten-clean</id>
							<phase>clean</phase>
							<goals>
								<goal>clean</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<flattenMode>ossrh</flattenMode>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-gpg-plugin</artifactId>
					<version>${gpg-plugin.version}</version>
					<executions>
						<execution>
							<id>sign-artifacts</id>
							<phase>verify</phase>
							<goals>
								<goal>sign</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>

	</build>

</project>